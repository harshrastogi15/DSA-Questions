// HARSH RASTOGI
// LEETCODE : https://leetcode.com/problems/shortest-common-supersequence/description/
// 


class Solution {

    string lcs(string s, string t){
        int n= s.size(),m=t.size();

        int dp[n+1][m+1];

        for(int i=0;i<n+1;i++){
            for(int j=0;j<m+1;j++){
                if(i==0 || j==0){
                    dp[i][j]=0;
                }else if(s[i-1]==t[j-1]){
                    dp[i][j]=1+dp[i-1][j-1];
                }else{
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }

        // cout<<dp[n][m]<<"\n";

        int i=n,j=m;
        string temp;
        while(i>0 && j>0){
            if(s[i-1]==t[j-1]){
                // cout<<temp<<"\n";
                temp.push_back(s[i-1]);
                i--;j--;
            }
            else if(dp[i-1][j] > dp[i][j-1]){
                i-=1;
            }else{
                j-=1;
            }
        }
        reverse(temp.begin(),temp.end());
        // cout<<temp<<"\n";
        return temp;
    }

public:
    string shortestCommonSupersequence(string str1, string str2) {
        string sub = lcs(str1,str2);
        string ans;
        int n =str1.size(),m=str2.size(),q=sub.size();
        int i=0,j=0,k=0;

        while(i<n && j<m && k<q){
            if(str1[i]==str2[j]){
                ans.push_back(str1[i]);i++;j++;
                k++;
            }else if(str1[i]==sub[k]){
                ans.push_back(str2[j]);
                j++;
            }else if(str2[j]==sub[k]){
                ans.push_back(str1[i]);i++;
            }else{
                ans.push_back(str1[i]);i++;
                ans.push_back(str2[j]);j++;
            
            }
        }

        while(i<n){
            ans.push_back(str1[i]);i++;
        }
        while(j<m){
            ans.push_back(str2[j]);j++;
            
        }


        return ans;
    }
};